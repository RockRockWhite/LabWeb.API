<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7b2ecc14-50d4-4c6c-b54d-82cdee07488c" name="变更" comment="">
      <change afterPath="$PROJECT_DIR$/utils/redis_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LabWeb.API.log" beforeDir="false" afterPath="$PROJECT_DIR$/LabWeb.API.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/routers/api.go" beforeDir="false" afterPath="$PROJECT_DIR$/routers/api.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///opt/homebrew/Cellar/go/1.19.3/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2FDWq2Ifs4xkWISAXmQrrFyHlJI" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/rock/workplace/LabWeb.API/controllers",
    "nodejs_package_manager_path": "npm"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/controllers" />
      <recent name="$PROJECT_DIR$/dtos" />
      <recent name="$PROJECT_DIR$/entities" />
      <recent name="$PROJECT_DIR$/middlewares" />
    </key>
  </component>
  <component name="RunManager" selected="Go 构建.go build github.com/RockRockWhite/LabWeb.API">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="LabWeb.API" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/RockRockWhite/LabWeb.API" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="LabWeb.API" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/RockRockWhite/LabWeb.API" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="LabWeb.API" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/RockRockWhite/LabWeb.API/controllers 中的 TestPutHit" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="LabWeb.API" />
      <working_directory value="$PROJECT_DIR$/" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/RockRockWhite/LabWeb.API/controllers" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestPutHit\E$" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/RockRockWhite/LabWeb.API/utils 中的 TestGetReidsClient" type="GoTestRunConfiguration" factoryName="Go Test" nameIsGenerated="true">
      <module name="LabWeb.API" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/RockRockWhite/LabWeb.API/utils" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetReidsClient\E$" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go 构建.go build github.com/RockRockWhite/LabWeb.API" />
      <item itemvalue="Go 测试.github.com/RockRockWhite/LabWeb.API/utils 中的 TestGetReidsClient" />
      <item itemvalue="Go 测试.github.com/RockRockWhite/LabWeb.API/controllers 中的 TestPutHit" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go 构建.go build github.com/RockRockWhite/LabWeb.API" />
        <item itemvalue="Go 测试.github.com/RockRockWhite/LabWeb.API/controllers 中的 TestPutHit" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>